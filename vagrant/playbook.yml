---
#  to run this playbook on a remote Azure Linux VM:  ansible-playbook -i azure.ini playbook.yml

- hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

    - name: install self signed certs to JupyterHub
      import_role:
        name: self-signed-certs
      when: inventory_hostname == 'default'

# OTHER INSTALL STUFF
    - name: upgrade all apt packages
      become: yes
      apt:
        upgrade: dist
        update_cache: yes
        cache_valid_time: 3600
    - name: install apt packages
      become: yes
      apt:
        name: ['vim', 'jq', 'python3-pip', 'npm', 'nodejs']
        state: present
        update_cache: yes
        cache_valid_time: 3600
        autoremove: yes
        autoclean: yes
    - name: install jupyterhub proxy
      become: yes
      npm:
        name: configurable-http-proxy
        global: yes
        state: present
    - name: install jupyterhub
      become: yes
      pip:
        name: ['jupyterhub', 'notebook']
        state: present
    - name: create jupyterhub daemon
      import_role:
        name: tumf.systemd-service
      become: yes
      vars:
        systemd_service_name: jupyterhub
        systemd_service_Unit_Description: jupyterhub
        systemd_service_Service_Type: simple
        systemd_service_Service_PIDFile: /run/jupyterhub.pid
        systemd_service_Service_ExecStart: "/usr/local/bin/jupyterhub --ip 0.0.0.0 --port {{ jupyterhub_port }} --ssl-key {{ jupyterhub_ssl_key_path }} --ssl-cert {{ jupyterhub_ssl_cert_path }}"
        systemd_service_Service_User: root
        systemd_service_Service_Group: root
        systemd_service_Service_WorkingDirectory: /home/vagrant
        systemd_service_Service_Restart: always
        systemd_service_Service_RestartSec: 10
        systemd_service_Install_WantedBy: multi-user.target
    - name: enable jupyterhub service -- autostart on boot
      become: yes
      service:
        name: jupyterhub
        enabled: yes
        state: started
...

